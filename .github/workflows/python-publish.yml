name: Build and Publish to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  # Test the package before building
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        django-version: ["4.2", "5.0", "5.1", "5.2"]
        exclude:
          # Django 5.0+ requires Python 3.10+
          - python-version: "3.8"
            django-version: "5.0"
          - python-version: "3.8"
            django-version: "5.1"
          - python-version: "3.8"
            django-version: "5.2"
          - python-version: "3.9"
            django-version: "5.0"
          - python-version: "3.9"
            django-version: "5.1"
          - python-version: "3.9"
            django-version: "5.2"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies and test basic functionality
        run: |
          python -m pip install --upgrade pip
          pip install Django==${{ matrix.django-version }}
          # Test that Django can import and run basic commands
          python -c "import django; print(f'Django {django.get_version()}')"
          
      - name: Test Django project setup
        run: |
          cd myproject
          # Set up Django environment
          export DJANGO_SETTINGS_MODULE=myproject.settings
          # Add current directory to Python path for imports
          export PYTHONPATH="${PYTHONPATH}:$(pwd)/.."
          # Run Django tests
          python manage.py test mamood_django_admin_log_viewer --verbosity=2

  # Build release distributions
  release-build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build release distributions
        run: |
          python -m build

      - name: Check distributions
        run: |
          python -m twine check dist/*

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  # Publish to PyPI
  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/project/mamood-django-admin-log-viewer/

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
